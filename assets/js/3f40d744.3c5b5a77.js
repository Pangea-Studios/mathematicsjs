"use strict";(self.webpackChunkmath=self.webpackChunkmath||[]).push([[6848],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},i=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),i=s(n),m=a,f=i["".concat(u,".").concat(m)]||i[m]||c[m]||l;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=i;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}i.displayName="MDXCreateElement"},5526:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={},o=void 0,p={unversionedId:"reference/docs/Enums/speedEnum",id:"reference/docs/Enums/speedEnum",title:"speedEnum",description:"This reference has been auto-generated and therefore is not guaranteed to be using the stable release.",source:"@site/docs/reference/docs/Enums/speedEnum.md",sourceDirName:"reference/docs/Enums",slug:"/reference/docs/Enums/speedEnum",permalink:"/mathematicsjs/docs/reference/docs/Enums/speedEnum",draft:!1,editUrl:"https://github.com/Pangea-Studios/mathematicsjs/blob/docs/website/docs/reference/docs/Enums/speedEnum.md",tags:[],version:"current",lastUpdatedBy:"PokyBread",lastUpdatedAt:1687287025,formattedLastUpdatedAt:"Jun 20, 2023",frontMatter:{},sidebar:"reference",previous:{title:"pressureUnits",permalink:"/mathematicsjs/docs/reference/docs/Enums/pressureUnits"},next:{title:"speedUnits",permalink:"/mathematicsjs/docs/reference/docs/Enums/speedUnits"}},u={},s=[{value:"speedEnum : <code>enum</code>",id:"speedenum--enum",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This reference has been auto-generated and therefore is not guaranteed to be using the stable release.")),(0,a.kt)("a",{name:"speedEnum"}),(0,a.kt)("h2",{id:"speedenum--enum"},"speedEnum : ",(0,a.kt)("code",null,"enum")),(0,a.kt)("p",null,"Enum for speed measurements"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kind"),": global enum",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Read only"),": true",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Properties")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MetersPerSecond"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"SpeedType")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"METERS_PER_SECOND"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"FeetPerSecond"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"SpeedType")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"FEET_PER_SECOND"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MilesPerHour"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"SpeedType")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"MILES_PER_HOUR"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"KilometersPerHour"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"SpeedType")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"KILOMETERS_PER_HOUR"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Knots"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"SpeedType")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"KNOTS"))))))}c.isMDXComponent=!0}}]);