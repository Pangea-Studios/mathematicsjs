"use strict";(self.webpackChunkmath=self.webpackChunkmath||[]).push([[109],{3905:(t,r,a)=>{a.d(r,{Zo:()=>d,kt:()=>s});var e=a(7294);function n(t,r,a){return r in t?Object.defineProperty(t,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[r]=a,t}function l(t,r){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);r&&(e=e.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),a.push.apply(a,e)}return a}function i(t){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?l(Object(a),!0).forEach((function(r){n(t,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(a,r))}))}return t}function m(t,r){if(null==t)return{};var a,e,n=function(t,r){if(null==t)return{};var a,e,n={},l=Object.keys(t);for(e=0;e<l.length;e++)a=l[e],r.indexOf(a)>=0||(n[a]=t[a]);return n}(t,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(e=0;e<l.length;e++)a=l[e],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var u=e.createContext({}),p=function(t){var r=e.useContext(u),a=r;return t&&(a="function"==typeof t?t(r):i(i({},r),t)),a},d=function(t){var r=p(t.components);return e.createElement(u.Provider,{value:r},t.children)},o={inlineCode:"code",wrapper:function(t){var r=t.children;return e.createElement(e.Fragment,{},r)}},c=e.forwardRef((function(t,r){var a=t.components,n=t.mdxType,l=t.originalType,u=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),c=p(a),s=n,k=c["".concat(u,".").concat(s)]||c[s]||o[s]||l;return a?e.createElement(k,i(i({ref:r},d),{},{components:a})):e.createElement(k,i({ref:r},d))}));function s(t,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=c;var m={};for(var u in r)hasOwnProperty.call(r,u)&&(m[u]=r[u]);m.originalType=t,m.mdxType="string"==typeof t?t:n,i[1]=m;for(var p=2;p<l;p++)i[p]=a[p];return e.createElement.apply(null,i)}return e.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8173:(t,r,a)=>{a.r(r),a.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var e=a(7462),n=(a(7294),a(3905));const l={},i=void 0,m={unversionedId:"reference/docs/Classes/Matrix",id:"reference/docs/Classes/Matrix",title:"Matrix",description:"This reference has been auto-generated and therefore is not guaranteed to be using the stable release.",source:"@site/docs/reference/docs/Classes/Matrix.md",sourceDirName:"reference/docs/Classes",slug:"/reference/docs/Classes/Matrix",permalink:"/mathematicsjs/docs/reference/docs/Classes/Matrix",draft:!1,editUrl:"https://github.com/Pangea-Studios/mathematicsjs/blob/docs/website/docs/reference/docs/Classes/Matrix.md",tags:[],version:"current",lastUpdatedBy:"PokyBread",lastUpdatedAt:1685725864,formattedLastUpdatedAt:"Jun 2, 2023",frontMatter:{},sidebar:"reference",previous:{title:"Indices",permalink:"/mathematicsjs/docs/reference/docs/Classes/Indices"},next:{title:"angleEnum",permalink:"/mathematicsjs/docs/reference/docs/Enums/angleEnum"}},u={},p=[{value:"Matrix",id:"matrix",level:2},{value:"matrix.multiplyMatrices(matrixA, matrixB) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixmultiplymatricesmatrixa-matrixb--arrayarraynumber",level:3},{value:"matrix.addMatrices(matrixA, matrixB) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixaddmatricesmatrixa-matrixb--arrayarraynumber",level:3},{value:"matrix.divideMatrices(matrixA, matrixB) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixdividematricesmatrixa-matrixb--arrayarraynumber",level:3},{value:"matrix.subtractMatrices(matrixA, matrixB) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixsubtractmatricesmatrixa-matrixb--arrayarraynumber",level:3},{value:"matrix.multiplyMatrixByScalar(matrix, scalar) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixmultiplymatrixbyscalarmatrix-scalar--arrayarraynumber",level:3},{value:"matrix.divideMatrixByScalar(matrix, scalar) \u21d2 <code>Array.&lt;Array.&lt;number&gt;&gt;</code>",id:"matrixdividematrixbyscalarmatrix-scalar--arrayarraynumber",level:3}],d={toc:p};function o(t){let{components:r,...a}=t;return(0,n.kt)("wrapper",(0,e.Z)({},d,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"This reference has been auto-generated and therefore is not guaranteed to be using the stable release.")),(0,n.kt)("a",{name:"Matrix"}),(0,n.kt)("h2",{id:"matrix"},"Matrix"),(0,n.kt)("p",null,"Class to create and manipulate Matrices"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": global class"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix"},"Matrix"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+multiplyMatrices"},".multiplyMatrices(matrixA, matrixB)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+addMatrices"},".addMatrices(matrixA, matrixB)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+divideMatrices"},".divideMatrices(matrixA, matrixB)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+subtractMatrices"},".subtractMatrices(matrixA, matrixB)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+multiplyMatrixByScalar"},".multiplyMatrixByScalar(matrix, scalar)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#Matrix+divideMatrixByScalar"},".divideMatrixByScalar(matrix, scalar)")," \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">"))))),(0,n.kt)("a",{name:"Matrix+multiplyMatrices"}),(0,n.kt)("h3",{id:"matrixmultiplymatricesmatrixa-matrixb--arrayarraynumber"},"matrix.multiplyMatrices(matrixA, matrixB) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Multiplies two matrices of different sizes."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the multiplication.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Throws"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"Error")," If the matrices cannot be multiplied.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixA"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The first matrix to multiply.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixB"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The second matrix to multiply.")))),(0,n.kt)("a",{name:"Matrix+addMatrices"}),(0,n.kt)("h3",{id:"matrixaddmatricesmatrixa-matrixb--arrayarraynumber"},"matrix.addMatrices(matrixA, matrixB) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Adds two matrices."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the addition.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Throws"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"Error")," If the matrices have different dimensions.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixA"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The first matrix to add.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixB"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The second matrix to add.")))),(0,n.kt)("a",{name:"Matrix+divideMatrices"}),(0,n.kt)("h3",{id:"matrixdividematricesmatrixa-matrixb--arrayarraynumber"},"matrix.divideMatrices(matrixA, matrixB) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Divides two matrices."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the division.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Throws"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"Error")," If the matrices have different dimensions or if any element of matrixB is zero.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixA"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The first matrix to divide.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixB"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The second matrix to divide.")))),(0,n.kt)("a",{name:"Matrix+subtractMatrices"}),(0,n.kt)("h3",{id:"matrixsubtractmatricesmatrixa-matrixb--arrayarraynumber"},"matrix.subtractMatrices(matrixA, matrixB) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Subtracts two matrices."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the subtraction.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Throws"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"Error")," If the matrices have different dimensions.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixA"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The first matrix to subtract.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrixB"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The second matrix to subtract.")))),(0,n.kt)("a",{name:"Matrix+multiplyMatrixByScalar"}),(0,n.kt)("h3",{id:"matrixmultiplymatrixbyscalarmatrix-scalar--arrayarraynumber"},"matrix.multiplyMatrixByScalar(matrix, scalar) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Multiplies a matrix by a scalar."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the multiplication."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The matrix to multiply.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"scalar"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The scalar to multiply the matrix by.")))),(0,n.kt)("a",{name:"Matrix+divideMatrixByScalar"}),(0,n.kt)("h3",{id:"matrixdividematrixbyscalarmatrix-scalar--arrayarraynumber"},"matrix.divideMatrixByScalar(matrix, scalar) \u21d2 ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("p",null,"Divides a matrix by a scalar."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.kt)("a",{parentName:"p",href:"#Matrix"},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Returns"),": ",(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")," - The resulting matrix from the division.",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Throws"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"Error")," If the scalar is zero.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Param"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array.","<","Array.","<","number",">",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The matrix to divide.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"scalar"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The scalar to divide the matrix by.")))))}o.isMDXComponent=!0}}]);